'''
Setup sys.path for importing /jac_sw python modules.
Import this module before e.g. 'import drama'.

NOTE The "config" submodule is imported conditionally, so you shouldn't
rely on jac_sw.config in your code unless you explicitly import it.
I'd prefer to not export it at all, but so far I haven't found a good
way to do that -- python automatically adds submodules to the global
package namespace on first import.

NOTE The "uae" submodule is only intended to be used by setup.py scripts.
On import, it will change the current working directory to sys.argv[0]
and write out a setup.cfg file.

This module looks for paths in the following order, stopping at first success:
 1. Special comments appended to scripts
 2. Dependencies listed in config/CONFIG.Defs
 3. All current links in /jac_sw/itsroot/install
 
Path comments are appended to installed scripts by the uae setup function.
For example:

  # module paths autogenerated from CONFIG.Defs, parsed by jac_sw module:
  # jac_sw.sys.path: /jac_sw/itsroot/install/this_0p0/lib/Linux/python2.7
  # jac_sw.sys.path: /jac_sw/itsroot/install/pydrama_0p0/lib/Linux/python2.7

Pros:
 - Doesn't change any actual code, which might introduce bugs
 - Only has an effect if the jac_sw module is actually imported
 - Avoids looking for an 'import jac_sw' statement
     (which might be missing if jac_sw is imported by a separate module)
 - User doesn't need to include any special tags for replacement
 - Traceback line numbers unchanged between source/install scripts
 - Robust against invoking as a script or via passing to python as arg
     (unlike modifying PYTHONPATH in wrapper script or env.py)
 - No ugly, nonstandard shebang line (vs former env.py method)

Cons:
 - Altering *comments* in installed scripts could cause errors
 - Paths hidden at bottom of file (tradeoff against changing line numbers)
 - Need to reread entire file to look for comments at the end

Suggestions for alternatives/improvements welcome; contact RMB.
'''

import sys
import os
import platform
import re

# set default environment variables if missing;
# note updating os.environ calls os.putenv, but not vice versa.
os.environ.setdefault("JITXML_DIR", "/jcmtdata/orac_data/ocs_configs")

# look for jac_sw.sys.path comments at the end of the script file
def check_comments():
    found = False
    try:
        lines = open(sys.argv[0]).readlines()
    except:
        lines = []
    for line in reversed(lines):
        line = line.strip()
        if not line:
            continue
        if not line.startswith('#'):
            break
        # NOTE only one '#'; users could 'comment out' lines if necessary
        match = re.match('^#\s*jac_sw.sys.path[:= \t]+(.*)$', line)
        if match:
            found = True
            pylib = match.group(1)
            if os.path.exists(pylib):
                sys.path.insert(1, pylib)
    return found

# look for CONFIG.Defs and use those module paths
def check_config():
    found = False
    import config
    if config.mods:
        found = True
        for mod in reversed(config.mods):
            sys.path.insert(1, mod)
    return found
    

# crawl the /jac_sw/itsroot/install directory
def check_install():
    # get a list of symlinks in the install directory
    # TODO allow install dir override
    idir = '/jac_sw/itsroot/install/'
    try:
        links = [f for f in os.listdir(idir) if os.path.islink(idir+f)]
    except:
        links = []
    # exclude backup softlinks (*Was, *old, etc);
    # assumes package names are unique prefixes
    current = []
    links = sorted(links)
    existing = ' '
    for link in links:
        if link.startswith(existing):
            continue
        existing = link
        current.append(link)
    # look for lib/Linux*/python* directories and add to sys.path.
    # assume sys.path[0] is '' (interpreter) or script path; skip it.
    import config
    for link in reversed(current):
        pylib = idir + link + '/lib/' + config.linux + '/' + config.pyversion
        if os.path.exists(pylib):
            sys.path.insert(1, pylib)
    return True

# use boolean short-circuit evaluation; first success skips the rest
check_comments() or check_config() or check_install()

# these should only be called once; do not export.
del check_comments
del check_config
del check_install
